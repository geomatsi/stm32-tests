#
#
#

TARGET=tests

# paths to dependencies

CM3_LIB_DIR = libopencm3
STLINKY_LIB_DIR = libstlinky

# toolchain

CROSS_COMPILE ?= /home/matsi/devel/tools/Sourcery_CodeBench_Lite_for_ARM_GNU_Linux-2013.11-33/bin/arm-none-linux-gnueabi

CC = $(CROSS_COMPILE)-gcc
LD = $(CROSS_COMPILE)-ld
OBJCOPY = $(CROSS_COMPILE)-objcopy

# project files

INC_DIR = $(TARGET)/include
SRC_DIR = $(TARGET)/src
OBJ_DIR = out

# flags

CFLAGS = -g -O2 -Wall
CFLAGS += -mcpu=cortex-m4 -mthumb -mthumb-interwork
CFLAGS += -mfpu=fpv4-sp-d16 -mfloat-abi=softfp

CFLAGS += -I$(INC_DIR)
CFLAGS += -I$(CM3_LIB_DIR)/include
CFLAGS += -I$(STLINKY_LIB_DIR)/include

CFLAGS += -DSTM32F4

LDFLAGS = -T$(TARGET)/stm32f4-test.ld

# external libs

LIBGCC = $(shell $(CC) -mthumb -mcpu=cortex-m4 -print-libgcc-file-name)
LIBCM3 = $(CM3_LIB_DIR)/lib/libopencm3_stm32f4.a
LIBSTLINKY= $(STLINKY_LIB_DIR)/libstlinky_stm32f4.a

# project sources

COMMON_SRCS += \
	$(SRC_DIR)/stdlib.c \
	$(SRC_DIR)/printf.c

GPIO_SRCS += $(SRC_DIR)/main_gpio.c
#

COMMON_OBJS := $(COMMON_SRCS:.c=.o)
COMMON_OBJS := $(addprefix $(OBJ_DIR)/,$(COMMON_OBJS))

GPIO_OBJS := $(GPIO_SRCS:.c=.o)
GPIO_OBJS := $(addprefix $(OBJ_DIR)/,$(GPIO_OBJS))




# rules

all: deps gpio

deps: libstlinky libopencm3

libstlinky:
	make -C libstlinky CROSS_COMPILE=$(CROSS_COMPILE) TARGET=stm32f4

libopencm3:
	make -C libopencm3 FP_FLAGS="-mfloat-abi=soft" PREFIX=$(CROSS_COMPILE) TARGETS="stm32/f4"

gpio: $(OBJ_DIR)/gpio.bin
	cp $(OBJ_DIR)/gpio.bin $(OBJ_DIR)/$(TARGET).bin

spi: $(OBJ_DIR)/spi.bin
	cp $(OBJ_DIR)/spi.bin $(OBJ_DIR)/$(TARGET).bin

$(OBJ_DIR)/gpio.elf: $(GPIO_OBJS) $(COMMON_OBJS) $(TEST_INCS) $(LIBGCC) $(TARGET)/stm32f4-test.ld
	$(LD) $(LDFLAGS) $(GPIO_OBJS) $(COMMON_OBJS) $(LIBCM3) $(LIBSTLINKY) $(LIBGCC) -o $@

$(OBJ_DIR)/spi.elf: $(SPI_OBJS) $(COMMON_OBJS) $(TEST_INCS) $(LIBGCC) $(TARGET)/stm32f4-test.ld
	$(LD) $(LDFLAGS) $(SPI_OBJS) $(COMMON_OBJS) $(LIBCM3) $(LIBSTLINKY) $(LIBGCC) -o $@

%.hex: %.elf
	$(OBJCOPY) -O ihex $^ $@

%.bin: %.elf
	$(OBJCOPY) -O binary $^ $@

$(OBJ_DIR)/%.o: %.c
	mkdir -p $(dir $@)
	$(CC) -c $(CFLAGS) -o $@ $^

$(OBJ_DIR)/%.o: %.s
	mkdir -p $(dir $@)
	$(CC) -c $(CFLAGS) -o $@ $^

flash:
	st-flash erase
	sleep 2
	st-flash write $(OBJ_DIR)/$(TARGET).bin 0x8000000

clean:
	rm -rf $(OBJ_DIR)

distclean:
	make -C libopencm3 clean
	make -C libstlinky clean
	rm -rf $(OBJ_DIR)

.PHONY: libopencm3
.PHONY: libstlinky
.PHONY: distclean
.PHONY: clean
